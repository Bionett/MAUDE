% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MAUDE.R
\name{findGuideHits}
\alias{findGuideHits}
\title{Calculate guide-level statistics for a single screen}
\usage{
findGuideHits(
  countTable,
  curBinBounds,
  pseudocount = 10,
  meanFunction = mean,
  sortBins = c("A", "B", "C", "D", "E", "F"),
  unsortedBin = "NS",
  negativeControl = "NT",
  limits = c(-4, 4)
)
}
\arguments{
\item{countTable}{a table containing one column for each bin (A-F) and another column for non-targeting guide (logical-"NT"), and unsorted abundance (NS)}

\item{curBinBounds}{a bin model as created by makeBinModel}

\item{pseudocount}{the count to be added to each bin count, per 1e6 reads/bin total (default=10 pseudo reads per 1e6 reads total)}

\item{meanFunction}{how to calculate the mean of the non-targeting guides for centering Z-scores.  Defaults to 'mean'}

\item{sortBins}{the names in countTable of the sorting bins.  Defaults to c("A","B","C","D","E","F")}

\item{unsortedBin}{the name in countTable of the unsorted bin.  Defaults to "NS"}

\item{negativeControl}{the name in countTable containing a logical representing whether or not the guide is non-Targeting (i.e. a negative control guide).  Defaults to "NT"}

\item{limits}{the limits to the mu optimization. Defaults to c(-4,4)}
}
\value{
a data.frame containing the guide-level statistics, including the Z score 'Z', log likelihood ratio 'llRatio', and estimated mean expression 'mean'.
}
\description{
Given a table of counts per guide/bin and a bin model for an experiment, calculate the optimal mean expression for each guide
}
\examples{
curSortBins = makeBinModel(data.frame(Bin = c("A","B","C","D","E","F"), fraction = rep(0.1,6)))
fakeReadData = data.frame(id=1:1000, A=rpois(1000, lambda = 100), B=rpois(1000, lambda = 100),
                          C=rpois(1000, lambda = 100), D=rpois(1000, lambda = 100),
                          E=rpois(1000, lambda = 100), F=rpois(1000, lambda = 100),
                          NotSorted=rpois(1000, lambda = 100), negControl = rnorm(1000)>0)
guideHits = findGuideHits(fakeReadData, curSortBins, unsortedBin = "NotSorted", 
  negativeControl="negControl")
if(require("ggplot2")){
  p=ggplot(guideHits, aes(x=Z, colour=negControl))+geom_density(); print(p)
}
}
